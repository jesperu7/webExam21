# more : https://robotninja.com/blog/introduction-using-selenium-docker-containers-end-end-testing/
version: "3"
services:
  www:
      build:
          context: .
          dockerfile: ./Dockerfile.php
      ports:
          - 80:80
      volumes:
          - ./www:/var/www/html/
          - ./logs:/var/log/apache2/
      networks:
          - default
  test:
      build:
          context: .
          dockerfile: ./Dockerfile.codeception
      volumes:
          - ./test:/var/www/test
          - ./www:/var/www/html
      networks:
          - default
  db:
      image: mariadb
      environment:
          MYSQL_DATABASE: myDb
          MYSQL_USER: user
          MYSQL_PASSWORD: test
          MYSQL_ROOT_PASSWORD: test
      volumes:
          - ./dbInit:/docker-entrypoint-initdb.d
          - persistent:/var/lib/mysql
      networks:
          - default
  phpmyadmin:
      image: phpmyadmin/phpmyadmin
      ports:
          - 8082:80
      environment:
          MYSQL_USER: user
          MYSQL_PASSWORD: test
          MYSQL_ROOT_PASSWORD: test
      networks:
          - default
  selenium-hub1:
    image: selenium/hub:3.141.59-europium
    container_name: selenium-hub1
    networks:
        - default
    ports:
      - 4444:4444
  chrome:
    image: selenium/node-chrome:3.141.59-europium
    shm_size: '2gb'
    depends_on:
      - selenium-hub1
    environment:
      - HUB_HOST=selenium-hub1
      - HUB_PORT=4444
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1080
  firefox:
    image: selenium/node-firefox:3.141.59-europium
    shm_size: '2gb'
    depends_on:
      - selenium-hub1
    environment:
      - HUB_HOST=selenium-hub1
      - HUB_PORT=4444
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1080
volumes:
  persistent:
